events {}

http {

    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s; # (version 1.0.1)

    # Redirect HTTP traffic to HTTPS
    server {
        listen 80;
        server_name api.hps-admin.com file.hps-admin.com; 
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name api.hps-admin.com;

        ssl_certificate /etc/ssl/certs/api_fullchain.pem;   
        ssl_certificate_key /etc/ssl/private/api_privkey.pem; 
        
        client_max_body_size 50M;

        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; object-src 'none'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; media-src 'none'; frame-src 'none'; font-src 'self'; connect-src 'self';";
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Feature-Policy "geolocation 'none'; midi 'none'; notifications 'none'; push 'none'; sync-xhr 'self'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; speaker 'none'; vibrate 'none'; fullscreen 'self'; payment 'none';" always;

        location / {
            limit_req zone=one burst=20 nodelay; # limit to 20 requests per second ( version 1.0.1 )
            proxy_pass http://app:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Api-Key $http_x_api_key;
            proxy_set_header X-Access-Token $http_x_access_token;
            proxy_set_header X-Refresh-Token $http_x_refresh_token;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;

            # CORS settings
            add_header 'Access-Control-Allow-Origin' 'https://hps-admin.com' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept, x-api-key, x-access-token, x-refresh-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Handle CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://hps-admin.com';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept, x-api-key, x-access-token, x-refresh-token';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain';
                return 204;
            }

            #########################################################
            #
            # Allow only requests from the specified Origin or Referer
            if ($http_origin !~* ^https?://(www\.)?hps-admin\.com$) {
                return 403;
            }
            if ($http_referer !~* ^https?://(www\.)?hps-admin\.com$) {
                return 403;
            }
            #
            #########################################################
        }

        location ~ /\.env {
            deny all;
            return 403;
        }
    }

    server {
        listen 443 ssl;
        server_name file.hps-admin.com;

        ssl_certificate /etc/ssl/certs/file_fullchain.pem;
        ssl_certificate_key /etc/ssl/private/file_privkey.pem;

        location / {
            limit_req zone=one burst=20 nodelay; # limit to 20 requests per second ( version 1.0.1 )
            proxy_pass http://file_server:5050; 
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Api-Key $http_x_api_key; 
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;

            #########################################################
            #
            # Allow only requests from the specified Origin or Referer
            if ($http_origin !~* ^https?://(www\.)?hps-admin\.com$) {
                return 403;
            }
            if ($http_referer !~* ^https?://(www\.)?hps-admin\.com$) {
                return 403;
            }
            #
            #########################################################
        }
    }
}
