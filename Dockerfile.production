# FROM node:18-alpine AS builder
# WORKDIR /usr/src/app

# # Clear npm cache first
# RUN npm cache clean --force

# # Install pnpm
# RUN npm install -g pnpm --ignore-scripts

# # Copy package files
# COPY package*.json pnpm-lock.yaml ./

# # Clean install dependencies
# RUN pnpm install --frozen-lockfile --ignore-scripts

# # Copy source
# COPY . .

# # Clean any existing build artifacts
# RUN rm -rf dist

# # Add debugging for TypeScript compilation
# RUN pnpm tsc --listFiles
# RUN pnpm tsc --traceResolution

# # Build
# RUN pnpm build

# RUN ls dist

# # Production stage
# FROM node:18-alpine
# WORKDIR /usr/src/app

# # Install tzdata and set timezone
# RUN apk add --no-cache tzdata
# ENV TZ=Asia/Karachi

# # Copy built files and dependencies
# COPY --from=builder /usr/src/app/dist ./dist
# COPY package*.json pnpm-lock.yaml ./

# # Set environment variables
# ENV DOCKER_BUILD=true
# ENV NODE_ENV=production
# ENV PORT=3000
# ENV TZ=Asia/Karachi

# # Clean install production dependencies
# RUN npm install -g pnpm --ignore-scripts && pnpm install --frozen-lockfile --ignore-scripts --prod
# RUN ls dist

# # Verify timezone setup (optional, can be removed in production)
# RUN date

# EXPOSE ${PORT}
# CMD ["node", "dist/index.js"]

FROM node:18-alpine AS builder
WORKDIR /usr/src/app

# Clear npm cache first
RUN npm cache clean --force 

# Install pnpm
RUN npm install -g pnpm

# Copy package files
COPY package*.json pnpm-lock.yaml ./

# Clean install dependencies
RUN pnpm install --frozen-lockfile

# Copy source
COPY . .

# Clean any existing build artifacts
RUN rm -rf dist

# Add debugging for TypeScript compilation
# RUN pnpm tsc --listFiles
# RUN pnpm tsc --traceResolution

# Build
RUN pnpm build

RUN mkdir -p dist/scripts && cp src/scripts/transformed_teachers.json dist/scripts/

RUN ls dist

# Production stage
FROM node:18-alpine
WORKDIR /usr/src/app

# Install tzdata and set timezone
RUN apk add --no-cache tzdata
ENV TZ=Asia/Karachi

# Copy built files and dependencies
COPY --from=builder /usr/src/app/dist ./dist
COPY package*.json pnpm-lock.yaml ./

# Set environment variables
ENV DOCKER_BUILD=true
ENV NODE_ENV=production
ENV PORT=3000
ENV TZ=Asia/Karachi

# Clean install production dependencies
RUN npm install -g pnpm && pnpm install --frozen-lockfile --prod
RUN ls dist

# Verify timezone setup (optional, can be removed in production)
RUN date

EXPOSE ${PORT}
CMD ["node", "dist/index.js"]