version: '3.8'

services:
  file_server:
    image: darkn3bula/dtop-ts:latest
    environment:
      - NODE_ENV=production
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    env_file:
      - .env
    environment:
      - NODE_ENV=docker
      - PORT=3000
      - REDIS_URL=redis://redis
    volumes:
      - ./logs:/usr/src/app/logs
      - uploads_volume:/usr/src/app/uploads
    depends_on:
      - redis
      - mongo
    restart: unless-stopped
    networks:
      - app-network
    links:
      - redis
      - mongo
      - file_server

  mongo:
    image: mongo:latest
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: devuser
      MONGO_INITDB_ROOT_PASSWORD: devpassword
      MONGO_INITDB_DATABASE: docker-db
    volumes:
      - ./addons/seed-db.js:/docker-entrypoint-initdb.d/seed-db.js:ro
      - dbdata:/data/db
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/live/api.hps-admin.com/fullchain.pem:/etc/ssl/certs/api_fullchain.pem
      - /etc/letsencrypt/live/api.hps-admin.com/privkey.pem:/etc/ssl/private/api_privkey.pem
      - /etc/letsencrypt/live/file.hps-admin.com/fullchain.pem:/etc/ssl/certs/file_fullchain.pem
      - /etc/letsencrypt/live/file.hps-admin.com/privkey.pem:/etc/ssl/private/file_privkey.pem
    depends_on:
      - app
      - file_server
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --appendonly no
    networks:
      - app-network

networks:
  app-network:

volumes:
  dbdata:
  uploads_volume:
