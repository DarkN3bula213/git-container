version: '3.8'

services:
    mongo1:
        image: mongo:7.0
        command: ['--replSet', 'rs0', '--bind_ip_all', '--port', '27017']
        ports:
            - 27017:27017
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            - TZ=Asia/Karachi
        healthcheck:
            test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
            interval: 5s
            timeout: 30s
            start_period: 0s
            start_interval: 1s
            retries: 30
        volumes:
            - 'mongo1_data:/data/db'
            - 'mongo1_config:/data/configdb'
            - ./addons/seed-db.js:/docker-entrypoint-initdb.d/seed-db.js:ro

    redis:
        image: redis:alpine
        container_name: redis
        command: redis-server --appendonly no --protected-mode no
        ports:
            - '6379:6379'

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
        ports:
            - '9090:9090'
        restart: unless-stopped

    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        volumes:
            - grafana_data:/var/lib/grafana
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=your_secure_password
            - GF_USERS_ALLOW_SIGN_UP=false
        ports:
            - '3000:3000'
        depends_on:
            - prometheus
        restart: unless-stopped

    loki:
        image: grafana/loki:latest
        container_name: loki
        ports:
            - '3100:3100'
        command: -config.file=/etc/loki/local-config.yaml
        volumes:
            - loki_data:/loki
        restart: unless-stopped

    promtail:
        image: grafana/promtail:latest
        volumes:
            - ./promtail:/etc/promtail
            - /var/log:/var/log
        command: -config.file=/etc/promtail/config.yml
        depends_on:
        - loki

volumes:
    mongo1_data:
    mongo1_config:
    prometheus_data:
    grafana_data:
    loki_data:
