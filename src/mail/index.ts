import { config } from '@/lib/config';
import { Logger } from '@/lib/logger';
import nodemailer from 'nodemailer';
import type { Transporter } from 'nodemailer';
const logger = new Logger(__filename);
export class MailSendingService {
  private transporter: Transporter;

  constructor(
    private config: {
      host: string;
      port: number;
      secure: boolean;
      auth: { user: string; pass: string };
    },
  ) {
    this.transporter = nodemailer.createTransport({
      host: config.host,
      port: config.port,
      secure: config.secure, // true for 465, false for other ports
      auth: {
        user: config.auth.user,
        pass: config.auth.pass,
      },
    });
  }

  async sendMail(
    to: string,
    subject: string,
    text: string,
    html?: string,
  ): Promise<void> {
    const mailOptions = {
      from: this.config.auth.user, // sender address
      to: to, // list of receivers
      subject: subject, // Subject line
      text: text, // plain text body
      html: html, // html body
    };

    try {
      const info = await this.transporter.sendMail(mailOptions);
      logger.info('Message sent', info.messageId);
    } catch (error) {
      logger.error('Error sending email: ', error);
    }
  }
}

const emailService = new MailSendingService({
  host: config.mail.host, // Localhost address provided by ProtonMail Bridge
  port: config.mail.port, // Port provided by ProtonMail Bridge
  secure: true, // Because you're connecting locally
  auth: {
    user: config.mail.auth.user, // Your ProtonMail email
    pass: config.mail.auth.pass, // Password generated by ProtonMail Bridge
  },
});

// Usage
/**
 * emailService.sendMail(
  'support@hps-admin.com',
  'Test Subject',
  'This is a plain text body',
  '<h1>This is a HTML body</h1>'
)
 */

export const mailService = emailService;
